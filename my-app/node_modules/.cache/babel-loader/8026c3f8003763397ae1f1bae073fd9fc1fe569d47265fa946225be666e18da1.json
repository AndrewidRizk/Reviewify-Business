{"ast":null,"code":"var _jsxFileName = \"/Users/kaan/dh10/my-app/src/components/Searchbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Searchbar.css\";\nimport { IoSearchOutline } from \"react-icons/io5\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch\n}) => {\n  _s();\n  // const [userInput, setUserInput] = useState('');\n  // const [responseMessage, setResponseMessage] = useState('');\n\n  // const sendDataToFlask = async () => {\n  //   const apiUrl = 'http://localhost';\n\n  //   const requestData = {\n  //     type: 'custom_type', // You can set a fixed type or make it dynamic as well\n  //     message: userInput,\n  //   };\n\n  //   try {\n  //     const response = await axios.post(apiUrl, requestData);\n  //     setResponseMessage(response.data.message);\n  //   } catch (error) {\n  //     console.error('Error:', error);\n  //   }\n  // };\n\n  const [userInput, setUserInput] = useState('');\n  const [processedData, setProcessedData] = useState('');\n  const sendDataToFlask = async () => {\n    const apiUrl = 'http://localhost:5000/flask/process_data';\n    const requestData = {\n      message: userInput\n    };\n    try {\n      const response = await axios.post(apiUrl, requestData);\n      setProcessedData(response.data.message);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Input 1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input1,\n          onChange: e => setInput1(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Input 2:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input2,\n          onChange: e => setInput2(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendDataToFlask,\n        children: \"Send POST Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Processed Data from Flask: \", processedData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n_s(SearchBar, \"QYlcq9dlnVc5rlhrfuNVYdTeUis=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useEffect","useState","IoSearchOutline","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchBar","onSearch","_s","userInput","setUserInput","processedData","setProcessedData","sendDataToFlask","apiUrl","requestData","message","response","post","data","error","console","children","type","value","input1","onChange","e","setInput1","target","fileName","_jsxFileName","lineNumber","columnNumber","input2","setInput2","onClick","_c","$RefreshReg$"],"sources":["/Users/kaan/dh10/my-app/src/components/Searchbar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Searchbar.css\";\nimport { IoSearchOutline } from \"react-icons/io5\";\nimport axios from \"axios\";\n\nconst SearchBar = ({ onSearch }) => {\n  // const [userInput, setUserInput] = useState('');\n  // const [responseMessage, setResponseMessage] = useState('');\n\n  // const sendDataToFlask = async () => {\n  //   const apiUrl = 'http://localhost';\n\n  //   const requestData = {\n  //     type: 'custom_type', // You can set a fixed type or make it dynamic as well\n  //     message: userInput,\n  //   };\n\n  //   try {\n  //     const response = await axios.post(apiUrl, requestData);\n  //     setResponseMessage(response.data.message);\n  //   } catch (error) {\n  //     console.error('Error:', error);\n  //   }\n  // };\n\n  const [userInput, setUserInput] = useState('');\n  const [processedData, setProcessedData] = useState('');\n\n  const sendDataToFlask = async () => {\n    const apiUrl = 'http://localhost:5000/flask/process_data';\n\n    const requestData = {\n      message: userInput,\n    };\n\n    try {\n      const response = await axios.post(apiUrl, requestData);\n      setProcessedData(response.data.message);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  \n\n  return (\n    <>\n         <div>\n      <label>\n        Input 1:\n        <input\n          type=\"text\"\n          value={input1}\n          onChange={(e) => setInput1(e.target.value)}\n        />\n      </label>\n      <label>\n        Input 2:\n        <input\n          type=\"text\"\n          value={input2}\n          onChange={(e) => setInput2(e.target.value)}\n        />\n      </label>\n      <button onClick={sendDataToFlask}>Send POST Request</button>\n      <p>Processed Data from Flask: {processedData}</p>\n    </div>\n    </>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,SAASC,eAAe,QAAQ,iBAAiB;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClC;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,MAAM,GAAG,0CAA0C;IAEzD,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAEP;IACX,CAAC;IAED,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAACJ,MAAM,EAAEC,WAAW,CAAC;MACtDH,gBAAgB,CAACK,QAAQ,CAACE,IAAI,CAACH,OAAO,CAAC;IACzC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAGD,oBACEjB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACKnB,OAAA;MAAAmB,QAAA,gBACHnB,OAAA;QAAAmB,QAAA,GAAO,UAEL,eAAAnB,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEC,MAAO;UACdC,QAAQ,EAAGC,CAAC,IAAKC,SAAS,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR9B,OAAA;QAAAmB,QAAA,GAAO,UAEL,eAAAnB,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEU,MAAO;UACdR,QAAQ,EAAGC,CAAC,IAAKQ,SAAS,CAACR,CAAC,CAACE,MAAM,CAACL,KAAK;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR9B,OAAA;QAAQiC,OAAO,EAAEvB,eAAgB;QAAAS,QAAA,EAAC;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5D9B,OAAA;QAAAmB,QAAA,GAAG,6BAA2B,EAACX,aAAa;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EAAC,gBACJ,CAAC;AAEP,CAAC;AAACzB,EAAA,CA/DIF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAiEf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}