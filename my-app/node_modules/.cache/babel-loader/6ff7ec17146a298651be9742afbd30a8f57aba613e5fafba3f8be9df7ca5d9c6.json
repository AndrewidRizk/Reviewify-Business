{"ast":null,"code":"import $yHMN2$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $yHMN2$forwardRef, useState as $yHMN2$useState, useRef as $yHMN2$useRef, useCallback as $yHMN2$useCallback, useEffect as $yHMN2$useEffect, createElement as $yHMN2$createElement, Fragment as $yHMN2$Fragment, useMemo as $yHMN2$useMemo } from \"react\";\nimport $yHMN2$reactdom from \"react-dom\";\nimport { createContextScope as $yHMN2$createContextScope } from \"@radix-ui/react-context\";\nimport { composeEventHandlers as $yHMN2$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { Primitive as $yHMN2$Primitive, dispatchDiscreteCustomEvent as $yHMN2$dispatchDiscreteCustomEvent } from \"@radix-ui/react-primitive\";\nimport { useControllableState as $yHMN2$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useComposedRefs as $yHMN2$useComposedRefs, composeRefs as $yHMN2$composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { useDirection as $yHMN2$useDirection } from \"@radix-ui/react-direction\";\nimport { Presence as $yHMN2$Presence } from \"@radix-ui/react-presence\";\nimport { useId as $yHMN2$useId } from \"@radix-ui/react-id\";\nimport { createCollection as $yHMN2$createCollection } from \"@radix-ui/react-collection\";\nimport { DismissableLayer as $yHMN2$DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { usePrevious as $yHMN2$usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useLayoutEffect as $yHMN2$useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useCallbackRef as $yHMN2$useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { Root as $yHMN2$Root } from \"@radix-ui/react-visually-hidden\";\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenu\n * -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$NAVIGATION_MENU_NAME = 'NavigationMenu';\nconst [$322c88a641701f3b$var$Collection, $322c88a641701f3b$var$useCollection, $322c88a641701f3b$var$createCollectionScope] = $yHMN2$createCollection($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst [$322c88a641701f3b$var$FocusGroupCollection, $322c88a641701f3b$var$useFocusGroupCollection, $322c88a641701f3b$var$createFocusGroupCollectionScope] = $yHMN2$createCollection($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst [$322c88a641701f3b$var$createNavigationMenuContext, $322c88a641701f3b$export$fb8ea5af8c9fcdf0] = $yHMN2$createContextScope($322c88a641701f3b$var$NAVIGATION_MENU_NAME, [$322c88a641701f3b$var$createCollectionScope, $322c88a641701f3b$var$createFocusGroupCollectionScope]);\nconst [$322c88a641701f3b$var$NavigationMenuProviderImpl, $322c88a641701f3b$var$useNavigationMenuContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst [$322c88a641701f3b$var$ViewportContentProvider, $322c88a641701f3b$var$useViewportContentContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst $322c88a641701f3b$export$5b2278cf1e8bcae2 = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeNavigationMenu: __scopeNavigationMenu,\n    value: valueProp,\n    onValueChange: onValueChange,\n    defaultValue: defaultValue,\n    delayDuration = 200,\n    skipDelayDuration = 300,\n    orientation = 'horizontal',\n    dir: dir,\n    ...NavigationMenuProps\n  } = props;\n  const [navigationMenu, setNavigationMenu] = $yHMN2$useState(null);\n  const composedRef = $yHMN2$useComposedRefs(forwardedRef, node => setNavigationMenu(node));\n  const direction = $yHMN2$useDirection(dir);\n  const openTimerRef = $yHMN2$useRef(0);\n  const closeTimerRef = $yHMN2$useRef(0);\n  const skipDelayTimerRef = $yHMN2$useRef(0);\n  const [isOpenDelayed, setIsOpenDelayed] = $yHMN2$useState(true);\n  const [value1 = '', setValue] = $yHMN2$useControllableState({\n    prop: valueProp,\n    onChange: value => {\n      const isOpen = value !== '';\n      const hasSkipDelayDuration = skipDelayDuration > 0;\n      if (isOpen) {\n        window.clearTimeout(skipDelayTimerRef.current);\n        if (hasSkipDelayDuration) setIsOpenDelayed(false);\n      } else {\n        window.clearTimeout(skipDelayTimerRef.current);\n        skipDelayTimerRef.current = window.setTimeout(() => setIsOpenDelayed(true), skipDelayDuration);\n      }\n      onValueChange === null || onValueChange === void 0 || onValueChange(value);\n    },\n    defaultProp: defaultValue\n  });\n  const startCloseTimer = $yHMN2$useCallback(() => {\n    window.clearTimeout(closeTimerRef.current);\n    closeTimerRef.current = window.setTimeout(() => setValue(''), 150);\n  }, [setValue]);\n  const handleOpen = $yHMN2$useCallback(itemValue => {\n    window.clearTimeout(closeTimerRef.current);\n    setValue(itemValue);\n  }, [setValue]);\n  const handleDelayedOpen = $yHMN2$useCallback(itemValue => {\n    const isOpenItem = value1 === itemValue;\n    if (isOpenItem)\n      // If the item is already open (e.g. we're transitioning from the content to the trigger)\n      // then we want to clear the close timer immediately.\n      window.clearTimeout(closeTimerRef.current);else openTimerRef.current = window.setTimeout(() => {\n      window.clearTimeout(closeTimerRef.current);\n      setValue(itemValue);\n    }, delayDuration);\n  }, [value1, setValue, delayDuration]);\n  $yHMN2$useEffect(() => {\n    return () => {\n      window.clearTimeout(openTimerRef.current);\n      window.clearTimeout(closeTimerRef.current);\n      window.clearTimeout(skipDelayTimerRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$NavigationMenuProvider, {\n    scope: __scopeNavigationMenu,\n    isRootMenu: true,\n    value: value1,\n    dir: direction,\n    orientation: orientation,\n    rootNavigationMenu: navigationMenu,\n    onTriggerEnter: itemValue => {\n      window.clearTimeout(openTimerRef.current);\n      if (isOpenDelayed) handleDelayedOpen(itemValue);else handleOpen(itemValue);\n    },\n    onTriggerLeave: () => {\n      window.clearTimeout(openTimerRef.current);\n      startCloseTimer();\n    },\n    onContentEnter: () => window.clearTimeout(closeTimerRef.current),\n    onContentLeave: startCloseTimer,\n    onItemSelect: itemValue => {\n      setValue(prevValue => prevValue === itemValue ? '' : itemValue);\n    },\n    onItemDismiss: () => setValue('')\n  }, /*#__PURE__*/$yHMN2$createElement($yHMN2$Primitive.nav, $yHMN2$babelruntimehelpersesmextends({\n    \"aria-label\": \"Main\",\n    \"data-orientation\": orientation,\n    dir: direction\n  }, NavigationMenuProps, {\n    ref: composedRef\n  })));\n});\n/*#__PURE__*/\nObject.assign($322c88a641701f3b$export$5b2278cf1e8bcae2, {\n  displayName: $322c88a641701f3b$var$NAVIGATION_MENU_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuSub\n * -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$SUB_NAME = 'NavigationMenuSub';\nconst $322c88a641701f3b$export$5958edd6c4ee7c79 = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeNavigationMenu: __scopeNavigationMenu,\n    value: valueProp,\n    onValueChange: onValueChange,\n    defaultValue: defaultValue,\n    orientation = 'horizontal',\n    ...subProps\n  } = props;\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$SUB_NAME, __scopeNavigationMenu);\n  const [value = '', setValue] = $yHMN2$useControllableState({\n    prop: valueProp,\n    onChange: onValueChange,\n    defaultProp: defaultValue\n  });\n  return /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$NavigationMenuProvider, {\n    scope: __scopeNavigationMenu,\n    isRootMenu: false,\n    value: value,\n    dir: context.dir,\n    orientation: orientation,\n    rootNavigationMenu: context.rootNavigationMenu,\n    onTriggerEnter: itemValue => setValue(itemValue),\n    onItemSelect: itemValue => setValue(itemValue),\n    onItemDismiss: () => setValue('')\n  }, /*#__PURE__*/$yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n    \"data-orientation\": orientation\n  }, subProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\nObject.assign($322c88a641701f3b$export$5958edd6c4ee7c79, {\n  displayName: $322c88a641701f3b$var$SUB_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$NavigationMenuProvider = props => {\n  const {\n    scope: scope,\n    isRootMenu: isRootMenu,\n    rootNavigationMenu: rootNavigationMenu,\n    dir: dir,\n    orientation: orientation,\n    children: children,\n    value: value,\n    onItemSelect: onItemSelect,\n    onItemDismiss: onItemDismiss,\n    onTriggerEnter: onTriggerEnter,\n    onTriggerLeave: onTriggerLeave,\n    onContentEnter: onContentEnter,\n    onContentLeave: onContentLeave\n  } = props;\n  const [viewport, setViewport] = $yHMN2$useState(null);\n  const [viewportContent, setViewportContent] = $yHMN2$useState(new Map());\n  const [indicatorTrack, setIndicatorTrack] = $yHMN2$useState(null);\n  return /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$NavigationMenuProviderImpl, {\n    scope: scope,\n    isRootMenu: isRootMenu,\n    rootNavigationMenu: rootNavigationMenu,\n    value: value,\n    previousValue: $yHMN2$usePrevious(value),\n    baseId: $yHMN2$useId(),\n    dir: dir,\n    orientation: orientation,\n    viewport: viewport,\n    onViewportChange: setViewport,\n    indicatorTrack: indicatorTrack,\n    onIndicatorTrackChange: setIndicatorTrack,\n    onTriggerEnter: $yHMN2$useCallbackRef(onTriggerEnter),\n    onTriggerLeave: $yHMN2$useCallbackRef(onTriggerLeave),\n    onContentEnter: $yHMN2$useCallbackRef(onContentEnter),\n    onContentLeave: $yHMN2$useCallbackRef(onContentLeave),\n    onItemSelect: $yHMN2$useCallbackRef(onItemSelect),\n    onItemDismiss: $yHMN2$useCallbackRef(onItemDismiss),\n    onViewportContentChange: $yHMN2$useCallback((contentValue, contentData) => {\n      setViewportContent(prevContent => {\n        prevContent.set(contentValue, contentData);\n        return new Map(prevContent);\n      });\n    }, []),\n    onViewportContentRemove: $yHMN2$useCallback(contentValue => {\n      setViewportContent(prevContent => {\n        if (!prevContent.has(contentValue)) return prevContent;\n        prevContent.delete(contentValue);\n        return new Map(prevContent);\n      });\n    }, [])\n  }, /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$Collection.Provider, {\n    scope: scope\n  }, /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$ViewportContentProvider, {\n    scope: scope,\n    items: viewportContent\n  }, children)));\n};\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuList\n * -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$LIST_NAME = 'NavigationMenuList';\nconst $322c88a641701f3b$export$c361068a95fd2286 = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeNavigationMenu: __scopeNavigationMenu,\n    ...listProps\n  } = props;\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$LIST_NAME, __scopeNavigationMenu);\n  const list = /*#__PURE__*/$yHMN2$createElement($yHMN2$Primitive.ul, $yHMN2$babelruntimehelpersesmextends({\n    \"data-orientation\": context.orientation\n  }, listProps, {\n    ref: forwardedRef\n  }));\n  return /*#__PURE__*/$yHMN2$createElement($yHMN2$Primitive.div, {\n    style: {\n      position: 'relative'\n    },\n    ref: context.onIndicatorTrackChange\n  }, /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$Collection.Slot, {\n    scope: __scopeNavigationMenu\n  }, context.isRootMenu ? /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$FocusGroup, {\n    asChild: true\n  }, list) : list));\n});\n/*#__PURE__*/\nObject.assign($322c88a641701f3b$export$c361068a95fd2286, {\n  displayName: $322c88a641701f3b$var$LIST_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuItem\n * -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$ITEM_NAME = 'NavigationMenuItem';\nconst [$322c88a641701f3b$var$NavigationMenuItemContextProvider, $322c88a641701f3b$var$useNavigationMenuItemContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$ITEM_NAME);\nconst $322c88a641701f3b$export$ffdbb83a2de845c2 = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeNavigationMenu: __scopeNavigationMenu,\n    value: valueProp,\n    ...itemProps\n  } = props;\n  const autoValue = $yHMN2$useId(); // We need to provide an initial deterministic value as `useId` will return\n  // empty string on the first render and we don't want to match our internal \"closed\" value.\n  const value = valueProp || autoValue || 'LEGACY_REACT_AUTO_VALUE';\n  const contentRef = $yHMN2$useRef(null);\n  const triggerRef = $yHMN2$useRef(null);\n  const focusProxyRef = $yHMN2$useRef(null);\n  const restoreContentTabOrderRef = $yHMN2$useRef(() => {});\n  const wasEscapeCloseRef = $yHMN2$useRef(false);\n  const handleContentEntry = $yHMN2$useCallback((side = 'start') => {\n    if (contentRef.current) {\n      restoreContentTabOrderRef.current();\n      const candidates = $322c88a641701f3b$var$getTabbableCandidates(contentRef.current);\n      if (candidates.length) $322c88a641701f3b$var$focusFirst(side === 'start' ? candidates : candidates.reverse());\n    }\n  }, []);\n  const handleContentExit = $yHMN2$useCallback(() => {\n    if (contentRef.current) {\n      const candidates = $322c88a641701f3b$var$getTabbableCandidates(contentRef.current);\n      if (candidates.length) restoreContentTabOrderRef.current = $322c88a641701f3b$var$removeFromTabOrder(candidates);\n    }\n  }, []);\n  return /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$NavigationMenuItemContextProvider, {\n    scope: __scopeNavigationMenu,\n    value: value,\n    triggerRef: triggerRef,\n    contentRef: contentRef,\n    focusProxyRef: focusProxyRef,\n    wasEscapeCloseRef: wasEscapeCloseRef,\n    onEntryKeyDown: handleContentEntry,\n    onFocusProxyEnter: handleContentEntry,\n    onRootContentClose: handleContentExit,\n    onContentFocusOutside: handleContentExit\n  }, /*#__PURE__*/$yHMN2$createElement($yHMN2$Primitive.li, $yHMN2$babelruntimehelpersesmextends({}, itemProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\nObject.assign($322c88a641701f3b$export$ffdbb83a2de845c2, {\n  displayName: $322c88a641701f3b$var$ITEM_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$TRIGGER_NAME = 'NavigationMenuTrigger';\nconst $322c88a641701f3b$export$37fe8002734d8f2 = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeNavigationMenu: __scopeNavigationMenu,\n    disabled: disabled,\n    ...triggerProps\n  } = props;\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$TRIGGER_NAME, props.__scopeNavigationMenu);\n  const itemContext = $322c88a641701f3b$var$useNavigationMenuItemContext($322c88a641701f3b$var$TRIGGER_NAME, props.__scopeNavigationMenu);\n  const ref = $yHMN2$useRef(null);\n  const composedRefs = $yHMN2$useComposedRefs(ref, itemContext.triggerRef, forwardedRef);\n  const triggerId = $322c88a641701f3b$var$makeTriggerId(context.baseId, itemContext.value);\n  const contentId = $322c88a641701f3b$var$makeContentId(context.baseId, itemContext.value);\n  const hasPointerMoveOpenedRef = $yHMN2$useRef(false);\n  const wasClickCloseRef = $yHMN2$useRef(false);\n  const open = itemContext.value === context.value;\n  return /*#__PURE__*/$yHMN2$createElement($yHMN2$Fragment, null, /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$Collection.ItemSlot, {\n    scope: __scopeNavigationMenu,\n    value: itemContext.value\n  }, /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$FocusGroupItem, {\n    asChild: true\n  }, /*#__PURE__*/$yHMN2$createElement($yHMN2$Primitive.button, $yHMN2$babelruntimehelpersesmextends({\n    id: triggerId,\n    disabled: disabled,\n    \"data-disabled\": disabled ? '' : undefined,\n    \"data-state\": $322c88a641701f3b$var$getOpenState(open),\n    \"aria-expanded\": open,\n    \"aria-controls\": contentId\n  }, triggerProps, {\n    ref: composedRefs,\n    onPointerEnter: $yHMN2$composeEventHandlers(props.onPointerEnter, () => {\n      wasClickCloseRef.current = false;\n      itemContext.wasEscapeCloseRef.current = false;\n    }),\n    onPointerMove: $yHMN2$composeEventHandlers(props.onPointerMove, $322c88a641701f3b$var$whenMouse(() => {\n      if (disabled || wasClickCloseRef.current || itemContext.wasEscapeCloseRef.current || hasPointerMoveOpenedRef.current) return;\n      context.onTriggerEnter(itemContext.value);\n      hasPointerMoveOpenedRef.current = true;\n    })),\n    onPointerLeave: $yHMN2$composeEventHandlers(props.onPointerLeave, $322c88a641701f3b$var$whenMouse(() => {\n      if (disabled) return;\n      context.onTriggerLeave();\n      hasPointerMoveOpenedRef.current = false;\n    })),\n    onClick: $yHMN2$composeEventHandlers(props.onClick, () => {\n      context.onItemSelect(itemContext.value);\n      wasClickCloseRef.current = open;\n    }),\n    onKeyDown: $yHMN2$composeEventHandlers(props.onKeyDown, event => {\n      const verticalEntryKey = context.dir === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n      const entryKey = {\n        horizontal: 'ArrowDown',\n        vertical: verticalEntryKey\n      }[context.orientation];\n      if (open && event.key === entryKey) {\n        itemContext.onEntryKeyDown(); // Prevent FocusGroupItem from handling the event\n        event.preventDefault();\n      }\n    })\n  })))), open && /*#__PURE__*/$yHMN2$createElement($yHMN2$Fragment, null, /*#__PURE__*/$yHMN2$createElement($yHMN2$Root, {\n    \"aria-hidden\": true,\n    tabIndex: 0,\n    ref: itemContext.focusProxyRef,\n    onFocus: event => {\n      const content = itemContext.contentRef.current;\n      const prevFocusedElement = event.relatedTarget;\n      const wasTriggerFocused = prevFocusedElement === ref.current;\n      const wasFocusFromContent = content === null || content === void 0 ? void 0 : content.contains(prevFocusedElement);\n      if (wasTriggerFocused || !wasFocusFromContent) itemContext.onFocusProxyEnter(wasTriggerFocused ? 'start' : 'end');\n    }\n  }), context.viewport && /*#__PURE__*/$yHMN2$createElement(\"span\", {\n    \"aria-owns\": contentId\n  })));\n});\n/*#__PURE__*/\nObject.assign($322c88a641701f3b$export$37fe8002734d8f2, {\n  displayName: $322c88a641701f3b$var$TRIGGER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuLink\n * -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$LINK_NAME = 'NavigationMenuLink';\nconst $322c88a641701f3b$var$LINK_SELECT = 'navigationMenu.linkSelect';\nconst $322c88a641701f3b$export$6893bf21536567da = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeNavigationMenu: __scopeNavigationMenu,\n    active: active,\n    onSelect: onSelect,\n    ...linkProps\n  } = props;\n  return /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$FocusGroupItem, {\n    asChild: true\n  }, /*#__PURE__*/$yHMN2$createElement($yHMN2$Primitive.a, $yHMN2$babelruntimehelpersesmextends({\n    \"data-active\": active ? '' : undefined,\n    \"aria-current\": active ? 'page' : undefined\n  }, linkProps, {\n    ref: forwardedRef,\n    onClick: $yHMN2$composeEventHandlers(props.onClick, event1 => {\n      const target = event1.target;\n      const linkSelectEvent = new CustomEvent($322c88a641701f3b$var$LINK_SELECT, {\n        bubbles: true,\n        cancelable: true\n      });\n      target.addEventListener($322c88a641701f3b$var$LINK_SELECT, event => onSelect === null || onSelect === void 0 ? void 0 : onSelect(event), {\n        once: true\n      });\n      $yHMN2$dispatchDiscreteCustomEvent(target, linkSelectEvent);\n      if (!linkSelectEvent.defaultPrevented && !event1.metaKey) {\n        const rootContentDismissEvent = new CustomEvent($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, {\n          bubbles: true,\n          cancelable: true\n        });\n        $yHMN2$dispatchDiscreteCustomEvent(target, rootContentDismissEvent);\n      }\n    }, {\n      checkForDefaultPrevented: false\n    })\n  })));\n});\n/*#__PURE__*/\nObject.assign($322c88a641701f3b$export$6893bf21536567da, {\n  displayName: $322c88a641701f3b$var$LINK_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuIndicator\n * -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$INDICATOR_NAME = 'NavigationMenuIndicator';\nconst $322c88a641701f3b$export$8ddb526647c0d8fb = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    forceMount: forceMount,\n    ...indicatorProps\n  } = props;\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$INDICATOR_NAME, props.__scopeNavigationMenu);\n  const isVisible = Boolean(context.value);\n  return context.indicatorTrack ? /*#__PURE__*/$yHMN2$reactdom.createPortal( /*#__PURE__*/$yHMN2$createElement($yHMN2$Presence, {\n    present: forceMount || isVisible\n  }, /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$NavigationMenuIndicatorImpl, $yHMN2$babelruntimehelpersesmextends({}, indicatorProps, {\n    ref: forwardedRef\n  }))), context.indicatorTrack) : null;\n});\n/*#__PURE__*/\nObject.assign($322c88a641701f3b$export$8ddb526647c0d8fb, {\n  displayName: $322c88a641701f3b$var$INDICATOR_NAME\n});\nconst $322c88a641701f3b$var$NavigationMenuIndicatorImpl = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeNavigationMenu: __scopeNavigationMenu,\n    ...indicatorProps\n  } = props;\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$INDICATOR_NAME, __scopeNavigationMenu);\n  const getItems = $322c88a641701f3b$var$useCollection(__scopeNavigationMenu);\n  const [activeTrigger, setActiveTrigger] = $yHMN2$useState(null);\n  const [position, setPosition] = $yHMN2$useState(null);\n  const isHorizontal = context.orientation === 'horizontal';\n  const isVisible = Boolean(context.value);\n  $yHMN2$useEffect(() => {\n    var _items$find;\n    const items = getItems();\n    const triggerNode = (_items$find = items.find(item => item.value === context.value)) === null || _items$find === void 0 ? void 0 : _items$find.ref.current;\n    if (triggerNode) setActiveTrigger(triggerNode);\n  }, [getItems, context.value]);\n  /**\n  * Update position when the indicator or parent track size changes\n  */\n  const handlePositionChange = () => {\n    if (activeTrigger) setPosition({\n      size: isHorizontal ? activeTrigger.offsetWidth : activeTrigger.offsetHeight,\n      offset: isHorizontal ? activeTrigger.offsetLeft : activeTrigger.offsetTop\n    });\n  };\n  $322c88a641701f3b$var$useResizeObserver(activeTrigger, handlePositionChange);\n  $322c88a641701f3b$var$useResizeObserver(context.indicatorTrack, handlePositionChange); // We need to wait for the indicator position to be available before rendering to\n  // snap immediately into position rather than transitioning from initial\n  return position ? /*#__PURE__*/$yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n    \"aria-hidden\": true,\n    \"data-state\": isVisible ? 'visible' : 'hidden',\n    \"data-orientation\": context.orientation\n  }, indicatorProps, {\n    ref: forwardedRef,\n    style: {\n      position: 'absolute',\n      ...(isHorizontal ? {\n        left: 0,\n        width: position.size + 'px',\n        transform: `translateX(${position.offset}px)`\n      } : {\n        top: 0,\n        height: position.size + 'px',\n        transform: `translateY(${position.offset}px)`\n      }),\n      ...indicatorProps.style\n    }\n  })) : null;\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuContent\n * -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$CONTENT_NAME = 'NavigationMenuContent';\nconst $322c88a641701f3b$export$38e00e996c2f93f7 = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    forceMount: forceMount,\n    ...contentProps\n  } = props;\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);\n  const itemContext = $322c88a641701f3b$var$useNavigationMenuItemContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);\n  const composedRefs = $yHMN2$useComposedRefs(itemContext.contentRef, forwardedRef);\n  const open = itemContext.value === context.value;\n  const commonProps = {\n    value: itemContext.value,\n    triggerRef: itemContext.triggerRef,\n    focusProxyRef: itemContext.focusProxyRef,\n    wasEscapeCloseRef: itemContext.wasEscapeCloseRef,\n    onContentFocusOutside: itemContext.onContentFocusOutside,\n    onRootContentClose: itemContext.onRootContentClose,\n    ...contentProps\n  };\n  return !context.viewport ? /*#__PURE__*/$yHMN2$createElement($yHMN2$Presence, {\n    present: forceMount || open\n  }, /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$NavigationMenuContentImpl, $yHMN2$babelruntimehelpersesmextends({\n    \"data-state\": $322c88a641701f3b$var$getOpenState(open)\n  }, commonProps, {\n    ref: composedRefs,\n    onPointerEnter: $yHMN2$composeEventHandlers(props.onPointerEnter, context.onContentEnter),\n    onPointerLeave: $yHMN2$composeEventHandlers(props.onPointerLeave, $322c88a641701f3b$var$whenMouse(context.onContentLeave)),\n    style: {\n      // Prevent interaction when animating out\n      pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n      ...commonProps.style\n    }\n  }))) : /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$ViewportContentMounter, $yHMN2$babelruntimehelpersesmextends({\n    forceMount: forceMount\n  }, commonProps, {\n    ref: composedRefs\n  }));\n});\n/*#__PURE__*/\nObject.assign($322c88a641701f3b$export$38e00e996c2f93f7, {\n  displayName: $322c88a641701f3b$var$CONTENT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$ViewportContentMounter = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);\n  const {\n    onViewportContentChange: onViewportContentChange,\n    onViewportContentRemove: onViewportContentRemove\n  } = context;\n  $yHMN2$useLayoutEffect(() => {\n    onViewportContentChange(props.value, {\n      ref: forwardedRef,\n      ...props\n    });\n  }, [props, forwardedRef, onViewportContentChange]);\n  $yHMN2$useLayoutEffect(() => {\n    return () => onViewportContentRemove(props.value);\n  }, [props.value, onViewportContentRemove]); // Content is proxied into the viewport\n  return null;\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$ROOT_CONTENT_DISMISS = 'navigationMenu.rootContentDismiss';\nconst $322c88a641701f3b$var$NavigationMenuContentImpl = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeNavigationMenu: __scopeNavigationMenu,\n    value: value,\n    triggerRef: triggerRef,\n    focusProxyRef: focusProxyRef,\n    wasEscapeCloseRef: wasEscapeCloseRef,\n    onRootContentClose: onRootContentClose,\n    onContentFocusOutside: onContentFocusOutside,\n    ...contentProps\n  } = props;\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, __scopeNavigationMenu);\n  const ref = $yHMN2$useRef(null);\n  const composedRefs = $yHMN2$useComposedRefs(ref, forwardedRef);\n  const triggerId = $322c88a641701f3b$var$makeTriggerId(context.baseId, value);\n  const contentId = $322c88a641701f3b$var$makeContentId(context.baseId, value);\n  const getItems = $322c88a641701f3b$var$useCollection(__scopeNavigationMenu);\n  const prevMotionAttributeRef = $yHMN2$useRef(null);\n  const {\n    onItemDismiss: onItemDismiss\n  } = context;\n  $yHMN2$useEffect(() => {\n    const content = ref.current; // Bubble dismiss to the root content node and focus its trigger\n    if (context.isRootMenu && content) {\n      const handleClose = () => {\n        var _triggerRef$current;\n        onItemDismiss();\n        onRootContentClose();\n        if (content.contains(document.activeElement)) (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 || _triggerRef$current.focus();\n      };\n      content.addEventListener($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, handleClose);\n      return () => content.removeEventListener($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, handleClose);\n    }\n  }, [context.isRootMenu, props.value, triggerRef, onItemDismiss, onRootContentClose]);\n  const motionAttribute = $yHMN2$useMemo(() => {\n    const items = getItems();\n    const values = items.map(item => item.value);\n    if (context.dir === 'rtl') values.reverse();\n    const index = values.indexOf(context.value);\n    const prevIndex = values.indexOf(context.previousValue);\n    const isSelected = value === context.value;\n    const wasSelected = prevIndex === values.indexOf(value); // We only want to update selected and the last selected content\n    // this avoids animations being interrupted outside of that range\n    if (!isSelected && !wasSelected) return prevMotionAttributeRef.current;\n    const attribute = (() => {\n      // Don't provide a direction on the initial open\n      if (index !== prevIndex) {\n        // If we're moving to this item from another\n        if (isSelected && prevIndex !== -1) return index > prevIndex ? 'from-end' : 'from-start'; // If we're leaving this item for another\n        if (wasSelected && index !== -1) return index > prevIndex ? 'to-start' : 'to-end';\n      } // Otherwise we're entering from closed or leaving the list\n      // entirely and should not animate in any direction\n      return null;\n    })();\n    prevMotionAttributeRef.current = attribute;\n    return attribute;\n  }, [context.previousValue, context.value, context.dir, getItems, value]);\n  return /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$FocusGroup, {\n    asChild: true\n  }, /*#__PURE__*/$yHMN2$createElement($yHMN2$DismissableLayer, $yHMN2$babelruntimehelpersesmextends({\n    id: contentId,\n    \"aria-labelledby\": triggerId,\n    \"data-motion\": motionAttribute,\n    \"data-orientation\": context.orientation\n  }, contentProps, {\n    ref: composedRefs,\n    onDismiss: () => {\n      var _ref$current;\n      const rootContentDismissEvent = new Event($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, {\n        bubbles: true,\n        cancelable: true\n      });\n      (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.dispatchEvent(rootContentDismissEvent);\n    },\n    onFocusOutside: $yHMN2$composeEventHandlers(props.onFocusOutside, event => {\n      var _context$rootNavigati;\n      onContentFocusOutside();\n      const target = event.target; // Only dismiss content when focus moves outside of the menu\n      if ((_context$rootNavigati = context.rootNavigationMenu) !== null && _context$rootNavigati !== void 0 && _context$rootNavigati.contains(target)) event.preventDefault();\n    }),\n    onPointerDownOutside: $yHMN2$composeEventHandlers(props.onPointerDownOutside, event => {\n      var _context$viewport;\n      const target = event.target;\n      const isTrigger = getItems().some(item => {\n        var _item$ref$current;\n        return (_item$ref$current = item.ref.current) === null || _item$ref$current === void 0 ? void 0 : _item$ref$current.contains(target);\n      });\n      const isRootViewport = context.isRootMenu && ((_context$viewport = context.viewport) === null || _context$viewport === void 0 ? void 0 : _context$viewport.contains(target));\n      if (isTrigger || isRootViewport || !context.isRootMenu) event.preventDefault();\n    }),\n    onKeyDown: $yHMN2$composeEventHandlers(props.onKeyDown, event => {\n      const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n      const isTabKey = event.key === 'Tab' && !isMetaKey;\n      if (isTabKey) {\n        const candidates = $322c88a641701f3b$var$getTabbableCandidates(event.currentTarget);\n        const focusedElement = document.activeElement;\n        const index = candidates.findIndex(candidate => candidate === focusedElement);\n        const isMovingBackwards = event.shiftKey;\n        const nextCandidates = isMovingBackwards ? candidates.slice(0, index).reverse() : candidates.slice(index + 1, candidates.length);\n        if ($322c88a641701f3b$var$focusFirst(nextCandidates))\n          // prevent browser tab keydown because we've handled focus\n          event.preventDefault();else {\n          var _focusProxyRef$curren;\n          // If we can't focus that means we're at the edges\n          // so focus the proxy and let browser handle\n          // tab/shift+tab keypress on the proxy instead\n          (_focusProxyRef$curren = focusProxyRef.current) === null || _focusProxyRef$curren === void 0 || _focusProxyRef$curren.focus();\n        }\n      }\n    }),\n    onEscapeKeyDown: $yHMN2$composeEventHandlers(props.onEscapeKeyDown, event => {\n      // prevent the dropdown from reopening\n      // after the escape key has been pressed\n      wasEscapeCloseRef.current = true;\n    })\n  })));\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuViewport\n * -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$VIEWPORT_NAME = 'NavigationMenuViewport';\nconst $322c88a641701f3b$export$ee880b97cc6d44a5 = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    forceMount: forceMount,\n    ...viewportProps\n  } = props;\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$VIEWPORT_NAME, props.__scopeNavigationMenu);\n  const open = Boolean(context.value);\n  return /*#__PURE__*/$yHMN2$createElement($yHMN2$Presence, {\n    present: forceMount || open\n  }, /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$NavigationMenuViewportImpl, $yHMN2$babelruntimehelpersesmextends({}, viewportProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\nObject.assign($322c88a641701f3b$export$ee880b97cc6d44a5, {\n  displayName: $322c88a641701f3b$var$VIEWPORT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$NavigationMenuViewportImpl = /*#__PURE__*/$yHMN2$forwardRef((props1, forwardedRef) => {\n  const {\n    __scopeNavigationMenu: __scopeNavigationMenu,\n    children: children,\n    ...viewportImplProps\n  } = props1;\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$VIEWPORT_NAME, __scopeNavigationMenu);\n  const composedRefs = $yHMN2$useComposedRefs(forwardedRef, context.onViewportChange);\n  const viewportContentContext = $322c88a641701f3b$var$useViewportContentContext($322c88a641701f3b$var$CONTENT_NAME, props1.__scopeNavigationMenu);\n  const [size, setSize] = $yHMN2$useState(null);\n  const [content, setContent] = $yHMN2$useState(null);\n  const viewportWidth = size ? (size === null || size === void 0 ? void 0 : size.width) + 'px' : undefined;\n  const viewportHeight = size ? (size === null || size === void 0 ? void 0 : size.height) + 'px' : undefined;\n  const open = Boolean(context.value); // We persist the last active content value as the viewport may be animating out\n  // and we want the content to remain mounted for the lifecycle of the viewport.\n  const activeContentValue = open ? context.value : context.previousValue;\n  /**\n  * Update viewport size to match the active content node.\n  * We prefer offset dimensions over `getBoundingClientRect` as the latter respects CSS transform.\n  * For example, if content animates in from `scale(0.5)` the dimensions would be anything\n  * from `0.5` to `1` of the intended size.\n  */\n  const handleSizeChange = () => {\n    if (content) setSize({\n      width: content.offsetWidth,\n      height: content.offsetHeight\n    });\n  };\n  $322c88a641701f3b$var$useResizeObserver(content, handleSizeChange);\n  return /*#__PURE__*/$yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n    \"data-state\": $322c88a641701f3b$var$getOpenState(open),\n    \"data-orientation\": context.orientation\n  }, viewportImplProps, {\n    ref: composedRefs,\n    style: {\n      // Prevent interaction when animating out\n      pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n      ['--radix-navigation-menu-viewport-width']: viewportWidth,\n      ['--radix-navigation-menu-viewport-height']: viewportHeight,\n      ...viewportImplProps.style\n    },\n    onPointerEnter: $yHMN2$composeEventHandlers(props1.onPointerEnter, context.onContentEnter),\n    onPointerLeave: $yHMN2$composeEventHandlers(props1.onPointerLeave, $322c88a641701f3b$var$whenMouse(context.onContentLeave))\n  }), Array.from(viewportContentContext.items).map(([value, {\n    ref: ref,\n    forceMount: forceMount,\n    ...props\n  }]) => {\n    const isActive = activeContentValue === value;\n    return /*#__PURE__*/$yHMN2$createElement($yHMN2$Presence, {\n      key: value,\n      present: forceMount || isActive\n    }, /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$NavigationMenuContentImpl, $yHMN2$babelruntimehelpersesmextends({}, props, {\n      ref: $yHMN2$composeRefs(ref, node => {\n        // We only want to update the stored node when another is available\n        // as we need to smoothly transition between them.\n        if (isActive && node) setContent(node);\n      })\n    })));\n  }));\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$FOCUS_GROUP_NAME = 'FocusGroup';\nconst $322c88a641701f3b$var$FocusGroup = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeNavigationMenu: __scopeNavigationMenu,\n    ...groupProps\n  } = props;\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$FOCUS_GROUP_NAME, __scopeNavigationMenu);\n  return /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$FocusGroupCollection.Provider, {\n    scope: __scopeNavigationMenu\n  }, /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$FocusGroupCollection.Slot, {\n    scope: __scopeNavigationMenu\n  }, /*#__PURE__*/$yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n    dir: context.dir\n  }, groupProps, {\n    ref: forwardedRef\n  }))));\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$var$ARROW_KEYS = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown'];\nconst $322c88a641701f3b$var$FOCUS_GROUP_ITEM_NAME = 'FocusGroupItem';\nconst $322c88a641701f3b$var$FocusGroupItem = /*#__PURE__*/$yHMN2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeNavigationMenu: __scopeNavigationMenu,\n    ...groupProps\n  } = props;\n  const getItems = $322c88a641701f3b$var$useFocusGroupCollection(__scopeNavigationMenu);\n  const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$FOCUS_GROUP_ITEM_NAME, __scopeNavigationMenu);\n  return /*#__PURE__*/$yHMN2$createElement($322c88a641701f3b$var$FocusGroupCollection.ItemSlot, {\n    scope: __scopeNavigationMenu\n  }, /*#__PURE__*/$yHMN2$createElement($yHMN2$Primitive.button, $yHMN2$babelruntimehelpersesmextends({}, groupProps, {\n    ref: forwardedRef,\n    onKeyDown: $yHMN2$composeEventHandlers(props.onKeyDown, event => {\n      const isFocusNavigationKey = ['Home', 'End', ...$322c88a641701f3b$var$ARROW_KEYS].includes(event.key);\n      if (isFocusNavigationKey) {\n        let candidateNodes = getItems().map(item => item.ref.current);\n        const prevItemKey = context.dir === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n        const prevKeys = [prevItemKey, 'ArrowUp', 'End'];\n        if (prevKeys.includes(event.key)) candidateNodes.reverse();\n        if ($322c88a641701f3b$var$ARROW_KEYS.includes(event.key)) {\n          const currentIndex = candidateNodes.indexOf(event.currentTarget);\n          candidateNodes = candidateNodes.slice(currentIndex + 1);\n        }\n        /**\n        * Imperative focus during keydown is risky so we prevent React's batching updates\n        * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n        */\n        setTimeout(() => $322c88a641701f3b$var$focusFirst(candidateNodes)); // Prevent page scroll while navigating\n        event.preventDefault();\n      }\n    })\n  })));\n});\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction $322c88a641701f3b$var$getTabbableCandidates(container) {\n  const nodes = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: node => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP; // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    }\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode); // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\nfunction $322c88a641701f3b$var$focusFirst(candidates) {\n  const previouslyFocusedElement = document.activeElement;\n  return candidates.some(candidate => {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === previouslyFocusedElement) return true;\n    candidate.focus();\n    return document.activeElement !== previouslyFocusedElement;\n  });\n}\nfunction $322c88a641701f3b$var$removeFromTabOrder(candidates) {\n  candidates.forEach(candidate => {\n    candidate.dataset.tabindex = candidate.getAttribute('tabindex') || '';\n    candidate.setAttribute('tabindex', '-1');\n  });\n  return () => {\n    candidates.forEach(candidate => {\n      const prevTabIndex = candidate.dataset.tabindex;\n      candidate.setAttribute('tabindex', prevTabIndex);\n    });\n  };\n}\nfunction $322c88a641701f3b$var$useResizeObserver(element, onResize) {\n  const handleResize = $yHMN2$useCallbackRef(onResize);\n  $yHMN2$useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n      * Resize Observer will throw an often benign error that says `ResizeObserver loop\n      * completed with undelivered notifications`. This means that ResizeObserver was not\n      * able to deliver all observations within a single animation frame, so we use\n      * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n      * Further reading: https://github.com/WICG/resize-observer/issues/38\n      */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\nfunction $322c88a641701f3b$var$getOpenState(open) {\n  return open ? 'open' : 'closed';\n}\nfunction $322c88a641701f3b$var$makeTriggerId(baseId, value) {\n  return `${baseId}-trigger-${value}`;\n}\nfunction $322c88a641701f3b$var$makeContentId(baseId, value) {\n  return `${baseId}-content-${value}`;\n}\nfunction $322c88a641701f3b$var$whenMouse(handler) {\n  return event => event.pointerType === 'mouse' ? handler(event) : undefined;\n}\n/* -----------------------------------------------------------------------------------------------*/\nconst $322c88a641701f3b$export$be92b6f5f03c0fe9 = $322c88a641701f3b$export$5b2278cf1e8bcae2;\nconst $322c88a641701f3b$export$d7a01e11500dfb6f = $322c88a641701f3b$export$5958edd6c4ee7c79;\nconst $322c88a641701f3b$export$54c2e3dc7acea9f5 = $322c88a641701f3b$export$c361068a95fd2286;\nconst $322c88a641701f3b$export$6d08773d2e66f8f2 = $322c88a641701f3b$export$ffdbb83a2de845c2;\nconst $322c88a641701f3b$export$41fb9f06171c75f4 = $322c88a641701f3b$export$37fe8002734d8f2;\nconst $322c88a641701f3b$export$a6c7ac8248d6e38a = $322c88a641701f3b$export$6893bf21536567da;\nconst $322c88a641701f3b$export$adb584737d712b70 = $322c88a641701f3b$export$8ddb526647c0d8fb;\nconst $322c88a641701f3b$export$7c6e2c02157bb7d2 = $322c88a641701f3b$export$38e00e996c2f93f7;\nconst $322c88a641701f3b$export$d5c6c08dc2d3ca7 = $322c88a641701f3b$export$ee880b97cc6d44a5;\nexport { $322c88a641701f3b$export$fb8ea5af8c9fcdf0 as createNavigationMenuScope, $322c88a641701f3b$export$5b2278cf1e8bcae2 as NavigationMenu, $322c88a641701f3b$export$5958edd6c4ee7c79 as NavigationMenuSub, $322c88a641701f3b$export$c361068a95fd2286 as NavigationMenuList, $322c88a641701f3b$export$ffdbb83a2de845c2 as NavigationMenuItem, $322c88a641701f3b$export$37fe8002734d8f2 as NavigationMenuTrigger, $322c88a641701f3b$export$6893bf21536567da as NavigationMenuLink, $322c88a641701f3b$export$8ddb526647c0d8fb as NavigationMenuIndicator, $322c88a641701f3b$export$38e00e996c2f93f7 as NavigationMenuContent, $322c88a641701f3b$export$ee880b97cc6d44a5 as NavigationMenuViewport, $322c88a641701f3b$export$be92b6f5f03c0fe9 as Root, $322c88a641701f3b$export$d7a01e11500dfb6f as Sub, $322c88a641701f3b$export$54c2e3dc7acea9f5 as List, $322c88a641701f3b$export$6d08773d2e66f8f2 as Item, $322c88a641701f3b$export$41fb9f06171c75f4 as Trigger, $322c88a641701f3b$export$a6c7ac8248d6e38a as Link, $322c88a641701f3b$export$adb584737d712b70 as Indicator, $322c88a641701f3b$export$7c6e2c02157bb7d2 as Content, $322c88a641701f3b$export$d5c6c08dc2d3ca7 as Viewport };","map":{"version":3,"names":["$322c88a641701f3b$var$NAVIGATION_MENU_NAME","$322c88a641701f3b$var$Collection","$322c88a641701f3b$var$useCollection","$322c88a641701f3b$var$createCollectionScope","$yHMN2$createCollection","$322c88a641701f3b$var$FocusGroupCollection","$322c88a641701f3b$var$useFocusGroupCollection","$322c88a641701f3b$var$createFocusGroupCollectionScope","$322c88a641701f3b$var$createNavigationMenuContext","$322c88a641701f3b$export$fb8ea5af8c9fcdf0","$yHMN2$createContextScope","$322c88a641701f3b$var$NavigationMenuProviderImpl","$322c88a641701f3b$var$useNavigationMenuContext","$322c88a641701f3b$var$ViewportContentProvider","$322c88a641701f3b$var$useViewportContentContext","$322c88a641701f3b$export$5b2278cf1e8bcae2","$yHMN2$forwardRef","props","forwardedRef","__scopeNavigationMenu","value","valueProp","onValueChange","defaultValue","delayDuration","skipDelayDuration","orientation","dir","NavigationMenuProps","navigationMenu","setNavigationMenu","$yHMN2$useState","composedRef","$yHMN2$useComposedRefs","node","direction","$yHMN2$useDirection","openTimerRef","$yHMN2$useRef","closeTimerRef","skipDelayTimerRef","isOpenDelayed","setIsOpenDelayed","value1","setValue","$yHMN2$useControllableState","prop","onChange","isOpen","hasSkipDelayDuration","window","clearTimeout","current","setTimeout","defaultProp","startCloseTimer","$yHMN2$useCallback","handleOpen","itemValue","handleDelayedOpen","isOpenItem","$yHMN2$useEffect","$yHMN2$createElement","$322c88a641701f3b$var$NavigationMenuProvider","scope","isRootMenu","rootNavigationMenu","onTriggerEnter","onTriggerLeave","onContentEnter","onContentLeave","onItemSelect","prevValue","onItemDismiss","$yHMN2$Primitive","nav","$yHMN2$babelruntimehelpersesmextends","ref","Object","assign","displayName","$322c88a641701f3b$var$SUB_NAME","$322c88a641701f3b$export$5958edd6c4ee7c79","subProps","context","div","children","viewport","setViewport","viewportContent","setViewportContent","Map","indicatorTrack","setIndicatorTrack","previousValue","$yHMN2$usePrevious","baseId","$yHMN2$useId","onViewportChange","onIndicatorTrackChange","$yHMN2$useCallbackRef","onViewportContentChange","contentValue","contentData","prevContent","set","onViewportContentRemove","has","delete","Provider","items","$322c88a641701f3b$var$LIST_NAME","$322c88a641701f3b$export$c361068a95fd2286","listProps","list","ul","style","position","Slot","$322c88a641701f3b$var$FocusGroup","asChild","$322c88a641701f3b$var$ITEM_NAME","$322c88a641701f3b$var$NavigationMenuItemContextProvider","$322c88a641701f3b$var$useNavigationMenuItemContext","$322c88a641701f3b$export$ffdbb83a2de845c2","itemProps","autoValue","contentRef","triggerRef","focusProxyRef","restoreContentTabOrderRef","wasEscapeCloseRef","handleContentEntry","side","candidates","$322c88a641701f3b$var$getTabbableCandidates","length","$322c88a641701f3b$var$focusFirst","reverse","handleContentExit","$322c88a641701f3b$var$removeFromTabOrder","onEntryKeyDown","onFocusProxyEnter","onRootContentClose","onContentFocusOutside","li","$322c88a641701f3b$var$TRIGGER_NAME","$322c88a641701f3b$export$37fe8002734d8f2","disabled","triggerProps","itemContext","composedRefs","triggerId","$322c88a641701f3b$var$makeTriggerId","contentId","$322c88a641701f3b$var$makeContentId","hasPointerMoveOpenedRef","wasClickCloseRef","open","$yHMN2$Fragment","ItemSlot","$322c88a641701f3b$var$FocusGroupItem","button","id","undefined","$322c88a641701f3b$var$getOpenState","onPointerEnter","$yHMN2$composeEventHandlers","onPointerMove","$322c88a641701f3b$var$whenMouse","onPointerLeave","onClick","onKeyDown","event","verticalEntryKey","entryKey","horizontal","vertical","key","preventDefault","$yHMN2$Root","tabIndex","onFocus","content","prevFocusedElement","relatedTarget","wasTriggerFocused","wasFocusFromContent","contains","$322c88a641701f3b$var$LINK_NAME","$322c88a641701f3b$var$LINK_SELECT","$322c88a641701f3b$export$6893bf21536567da","active","onSelect","linkProps","a","event1","target","linkSelectEvent","CustomEvent","bubbles","cancelable","addEventListener","once","$yHMN2$dispatchDiscreteCustomEvent","defaultPrevented","metaKey","rootContentDismissEvent","$322c88a641701f3b$var$ROOT_CONTENT_DISMISS","checkForDefaultPrevented","$322c88a641701f3b$var$INDICATOR_NAME","$322c88a641701f3b$export$8ddb526647c0d8fb","forceMount","indicatorProps","isVisible","Boolean","$yHMN2$reactdom","createPortal","$yHMN2$Presence","present","$322c88a641701f3b$var$NavigationMenuIndicatorImpl","getItems","activeTrigger","setActiveTrigger","setPosition","isHorizontal","_items$find","triggerNode","find","item","handlePositionChange","size","offsetWidth","offsetHeight","offset","offsetLeft","offsetTop","$322c88a641701f3b$var$useResizeObserver","left","width","transform","top","height","$322c88a641701f3b$var$CONTENT_NAME","$322c88a641701f3b$export$38e00e996c2f93f7","contentProps","commonProps","$322c88a641701f3b$var$NavigationMenuContentImpl","pointerEvents","$322c88a641701f3b$var$ViewportContentMounter","$yHMN2$useLayoutEffect","prevMotionAttributeRef","handleClose","_triggerRef$current","document","activeElement","focus","removeEventListener","motionAttribute","$yHMN2$useMemo","values","map","index","indexOf","prevIndex","isSelected","wasSelected","attribute","$yHMN2$DismissableLayer","onDismiss","_ref$current","Event","dispatchEvent","onFocusOutside","_context$rootNavigati","onPointerDownOutside","_context$viewport","isTrigger","some","_item$ref$current","isRootViewport","isMetaKey","altKey","ctrlKey","isTabKey","currentTarget","focusedElement","findIndex","candidate","isMovingBackwards","shiftKey","nextCandidates","slice","_focusProxyRef$curren","onEscapeKeyDown","$322c88a641701f3b$var$VIEWPORT_NAME","$322c88a641701f3b$export$ee880b97cc6d44a5","viewportProps","$322c88a641701f3b$var$NavigationMenuViewportImpl","props1","viewportImplProps","viewportContentContext","setSize","setContent","viewportWidth","viewportHeight","activeContentValue","handleSizeChange","Array","from","isActive","$yHMN2$composeRefs","$322c88a641701f3b$var$FOCUS_GROUP_NAME","groupProps","$322c88a641701f3b$var$ARROW_KEYS","$322c88a641701f3b$var$FOCUS_GROUP_ITEM_NAME","isFocusNavigationKey","includes","candidateNodes","prevItemKey","prevKeys","currentIndex","getTabbableCandidates","container","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","tagName","type","hidden","FILTER_SKIP","FILTER_ACCEPT","nextNode","push","currentNode","focusFirst","previouslyFocusedElement","removeFromTabOrder","forEach","dataset","tabindex","getAttribute","setAttribute","prevTabIndex","useResizeObserver","element","onResize","handleResize","rAF","resizeObserver","ResizeObserver","cancelAnimationFrame","requestAnimationFrame","observe","unobserve","getOpenState","makeTriggerId","makeContentId","whenMouse","handler","pointerType","$322c88a641701f3b$export$be92b6f5f03c0fe9","$322c88a641701f3b$export$d7a01e11500dfb6f","$322c88a641701f3b$export$54c2e3dc7acea9f5","$322c88a641701f3b$export$6d08773d2e66f8f2","$322c88a641701f3b$export$41fb9f06171c75f4","$322c88a641701f3b$export$a6c7ac8248d6e38a","$322c88a641701f3b$export$adb584737d712b70","$322c88a641701f3b$export$7c6e2c02157bb7d2","$322c88a641701f3b$export$d5c6c08dc2d3ca7"],"sources":["/Users/kaan/dh10/my-app/node_modules/@radix-ui/react-navigation-menu/dist/packages/react/navigation-menu/src/index.ts","/Users/kaan/dh10/my-app/node_modules/@radix-ui/react-navigation-menu/dist/packages/react/navigation-menu/src/NavigationMenu.tsx"],"sourcesContent":["export {\n  createNavigationMenuScope,\n  //\n  NavigationMenu,\n  NavigationMenuSub,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuContent,\n  NavigationMenuViewport,\n  //\n  Root,\n  Sub,\n  List,\n  Item,\n  Trigger,\n  Link,\n  Indicator,\n  Content,\n  Viewport,\n} from './NavigationMenu';\nexport type {\n  NavigationMenuProps,\n  NavigationMenuSubProps,\n  NavigationMenuListProps,\n  NavigationMenuItemProps,\n  NavigationMenuTriggerProps,\n  NavigationMenuLinkProps,\n  NavigationMenuIndicatorProps,\n  NavigationMenuContentProps,\n  NavigationMenuViewportProps,\n} from './NavigationMenu';\n","/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { composeRefs, useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Orientation = 'vertical' | 'horizontal';\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAVIGATION_MENU_NAME = 'NavigationMenu';\n\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  NavigationMenuTriggerElement,\n  { value: string }\n>(NAVIGATION_MENU_NAME);\n\nconst [FocusGroupCollection, useFocusGroupCollection, createFocusGroupCollectionScope] =\n  createCollection<FocusGroupItemElement, {}>(NAVIGATION_MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeNavigationMenu?: Scope };\nconst [createNavigationMenuContext, createNavigationMenuScope] = createContextScope(\n  NAVIGATION_MENU_NAME,\n  [createCollectionScope, createFocusGroupCollectionScope]\n);\n\ntype ContentData = {\n  ref?: React.Ref<ViewportContentMounterElement>;\n} & ViewportContentMounterProps;\n\ntype NavigationMenuContextValue = {\n  isRootMenu: boolean;\n  value: string;\n  previousValue: string;\n  baseId: string;\n  dir: Direction;\n  orientation: Orientation;\n  rootNavigationMenu: NavigationMenuElement | null;\n  indicatorTrack: HTMLDivElement | null;\n  onIndicatorTrackChange(indicatorTrack: HTMLDivElement | null): void;\n  viewport: NavigationMenuViewportElement | null;\n  onViewportChange(viewport: NavigationMenuViewportElement | null): void;\n  onViewportContentChange(contentValue: string, contentData: ContentData): void;\n  onViewportContentRemove(contentValue: string): void;\n  onTriggerEnter(itemValue: string): void;\n  onTriggerLeave(): void;\n  onContentEnter(): void;\n  onContentLeave(): void;\n  onItemSelect(itemValue: string): void;\n  onItemDismiss(): void;\n};\n\nconst [NavigationMenuProviderImpl, useNavigationMenuContext] =\n  createNavigationMenuContext<NavigationMenuContextValue>(NAVIGATION_MENU_NAME);\n\nconst [ViewportContentProvider, useViewportContentContext] = createNavigationMenuContext<{\n  items: Map<string, ContentData>;\n}>(NAVIGATION_MENU_NAME);\n\ntype NavigationMenuElement = React.ElementRef<typeof Primitive.nav>;\ntype PrimitiveNavProps = Radix.ComponentPropsWithoutRef<typeof Primitive.nav>;\ninterface NavigationMenuProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    PrimitiveNavProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  dir?: Direction;\n  orientation?: Orientation;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 200\n   */\n  delayDuration?: number;\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number;\n}\n\nconst NavigationMenu = React.forwardRef<NavigationMenuElement, NavigationMenuProps>(\n  (props: ScopedProps<NavigationMenuProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      delayDuration = 200,\n      skipDelayDuration = 300,\n      orientation = 'horizontal',\n      dir,\n      ...NavigationMenuProps\n    } = props;\n    const [navigationMenu, setNavigationMenu] = React.useState<NavigationMenuElement | null>(null);\n    const composedRef = useComposedRefs(forwardedRef, (node) => setNavigationMenu(node));\n    const direction = useDirection(dir);\n    const openTimerRef = React.useRef(0);\n    const closeTimerRef = React.useRef(0);\n    const skipDelayTimerRef = React.useRef(0);\n    const [isOpenDelayed, setIsOpenDelayed] = React.useState(true);\n    const [value = '', setValue] = useControllableState({\n      prop: valueProp,\n      onChange: (value) => {\n        const isOpen = value !== '';\n        const hasSkipDelayDuration = skipDelayDuration > 0;\n\n        if (isOpen) {\n          window.clearTimeout(skipDelayTimerRef.current);\n          if (hasSkipDelayDuration) setIsOpenDelayed(false);\n        } else {\n          window.clearTimeout(skipDelayTimerRef.current);\n          skipDelayTimerRef.current = window.setTimeout(\n            () => setIsOpenDelayed(true),\n            skipDelayDuration\n          );\n        }\n\n        onValueChange?.(value);\n      },\n      defaultProp: defaultValue,\n    });\n\n    const startCloseTimer = React.useCallback(() => {\n      window.clearTimeout(closeTimerRef.current);\n      closeTimerRef.current = window.setTimeout(() => setValue(''), 150);\n    }, [setValue]);\n\n    const handleOpen = React.useCallback(\n      (itemValue: string) => {\n        window.clearTimeout(closeTimerRef.current);\n        setValue(itemValue);\n      },\n      [setValue]\n    );\n\n    const handleDelayedOpen = React.useCallback(\n      (itemValue: string) => {\n        const isOpenItem = value === itemValue;\n        if (isOpenItem) {\n          // If the item is already open (e.g. we're transitioning from the content to the trigger)\n          // then we want to clear the close timer immediately.\n          window.clearTimeout(closeTimerRef.current);\n        } else {\n          openTimerRef.current = window.setTimeout(() => {\n            window.clearTimeout(closeTimerRef.current);\n            setValue(itemValue);\n          }, delayDuration);\n        }\n      },\n      [value, setValue, delayDuration]\n    );\n\n    React.useEffect(() => {\n      return () => {\n        window.clearTimeout(openTimerRef.current);\n        window.clearTimeout(closeTimerRef.current);\n        window.clearTimeout(skipDelayTimerRef.current);\n      };\n    }, []);\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={true}\n        value={value}\n        dir={direction}\n        orientation={orientation}\n        rootNavigationMenu={navigationMenu}\n        onTriggerEnter={(itemValue) => {\n          window.clearTimeout(openTimerRef.current);\n          if (isOpenDelayed) handleDelayedOpen(itemValue);\n          else handleOpen(itemValue);\n        }}\n        onTriggerLeave={() => {\n          window.clearTimeout(openTimerRef.current);\n          startCloseTimer();\n        }}\n        onContentEnter={() => window.clearTimeout(closeTimerRef.current)}\n        onContentLeave={startCloseTimer}\n        onItemSelect={(itemValue) => {\n          setValue((prevValue) => (prevValue === itemValue ? '' : itemValue));\n        }}\n        onItemDismiss={() => setValue('')}\n      >\n        <Primitive.nav\n          aria-label=\"Main\"\n          data-orientation={orientation}\n          dir={direction}\n          {...NavigationMenuProps}\n          ref={composedRef}\n        />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenu.displayName = NAVIGATION_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'NavigationMenuSub';\n\ntype NavigationMenuSubElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface NavigationMenuSubProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    PrimitiveDivProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  orientation?: Orientation;\n}\n\nconst NavigationMenuSub = React.forwardRef<NavigationMenuSubElement, NavigationMenuSubProps>(\n  (props: ScopedProps<NavigationMenuSubProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      ...subProps\n    } = props;\n    const context = useNavigationMenuContext(SUB_NAME, __scopeNavigationMenu);\n    const [value = '', setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={false}\n        value={value}\n        dir={context.dir}\n        orientation={orientation}\n        rootNavigationMenu={context.rootNavigationMenu}\n        onTriggerEnter={(itemValue) => setValue(itemValue)}\n        onItemSelect={(itemValue) => setValue(itemValue)}\n        onItemDismiss={() => setValue('')}\n      >\n        <Primitive.div data-orientation={orientation} {...subProps} ref={forwardedRef} />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenuSub.displayName = SUB_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ninterface NavigationMenuProviderPrivateProps {\n  isRootMenu: boolean;\n  scope: Scope;\n  children: React.ReactNode;\n  orientation: Orientation;\n  dir: Direction;\n  rootNavigationMenu: NavigationMenuElement | null;\n  value: string;\n  onTriggerEnter(itemValue: string): void;\n  onTriggerLeave?(): void;\n  onContentEnter?(): void;\n  onContentLeave?(): void;\n  onItemSelect(itemValue: string): void;\n  onItemDismiss(): void;\n}\n\ninterface NavigationMenuProviderProps extends NavigationMenuProviderPrivateProps {}\n\nconst NavigationMenuProvider: React.FC<NavigationMenuProviderProps> = (\n  props: ScopedProps<NavigationMenuProviderProps>\n) => {\n  const {\n    scope,\n    isRootMenu,\n    rootNavigationMenu,\n    dir,\n    orientation,\n    children,\n    value,\n    onItemSelect,\n    onItemDismiss,\n    onTriggerEnter,\n    onTriggerLeave,\n    onContentEnter,\n    onContentLeave,\n  } = props;\n  const [viewport, setViewport] = React.useState<NavigationMenuViewportElement | null>(null);\n  const [viewportContent, setViewportContent] = React.useState<Map<string, ContentData>>(new Map());\n  const [indicatorTrack, setIndicatorTrack] = React.useState<HTMLDivElement | null>(null);\n\n  return (\n    <NavigationMenuProviderImpl\n      scope={scope}\n      isRootMenu={isRootMenu}\n      rootNavigationMenu={rootNavigationMenu}\n      value={value}\n      previousValue={usePrevious(value)}\n      baseId={useId()}\n      dir={dir}\n      orientation={orientation}\n      viewport={viewport}\n      onViewportChange={setViewport}\n      indicatorTrack={indicatorTrack}\n      onIndicatorTrackChange={setIndicatorTrack}\n      onTriggerEnter={useCallbackRef(onTriggerEnter)}\n      onTriggerLeave={useCallbackRef(onTriggerLeave)}\n      onContentEnter={useCallbackRef(onContentEnter)}\n      onContentLeave={useCallbackRef(onContentLeave)}\n      onItemSelect={useCallbackRef(onItemSelect)}\n      onItemDismiss={useCallbackRef(onItemDismiss)}\n      onViewportContentChange={React.useCallback((contentValue, contentData) => {\n        setViewportContent((prevContent) => {\n          prevContent.set(contentValue, contentData);\n          return new Map(prevContent);\n        });\n      }, [])}\n      onViewportContentRemove={React.useCallback((contentValue) => {\n        setViewportContent((prevContent) => {\n          if (!prevContent.has(contentValue)) return prevContent;\n          prevContent.delete(contentValue);\n          return new Map(prevContent);\n        });\n      }, [])}\n    >\n      <Collection.Provider scope={scope}>\n        <ViewportContentProvider scope={scope} items={viewportContent}>\n          {children}\n        </ViewportContentProvider>\n      </Collection.Provider>\n    </NavigationMenuProviderImpl>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nconst LIST_NAME = 'NavigationMenuList';\n\ntype NavigationMenuListElement = React.ElementRef<typeof Primitive.ul>;\ntype PrimitiveUnorderedListProps = Radix.ComponentPropsWithoutRef<typeof Primitive.ul>;\ninterface NavigationMenuListProps extends PrimitiveUnorderedListProps {}\n\nconst NavigationMenuList = React.forwardRef<NavigationMenuListElement, NavigationMenuListProps>(\n  (props: ScopedProps<NavigationMenuListProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...listProps } = props;\n    const context = useNavigationMenuContext(LIST_NAME, __scopeNavigationMenu);\n\n    const list = (\n      <Primitive.ul data-orientation={context.orientation} {...listProps} ref={forwardedRef} />\n    );\n\n    return (\n      <Primitive.div style={{ position: 'relative' }} ref={context.onIndicatorTrackChange}>\n        <Collection.Slot scope={__scopeNavigationMenu}>\n          {context.isRootMenu ? <FocusGroup asChild>{list}</FocusGroup> : list}\n        </Collection.Slot>\n      </Primitive.div>\n    );\n  }\n);\n\nNavigationMenuList.displayName = LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'NavigationMenuItem';\n\ntype FocusProxyElement = React.ElementRef<typeof VisuallyHiddenPrimitive.Root>;\n\ntype NavigationMenuItemContextValue = {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement>;\n  contentRef: React.RefObject<NavigationMenuContentElement>;\n  focusProxyRef: React.RefObject<FocusProxyElement>;\n  wasEscapeCloseRef: React.MutableRefObject<boolean>;\n  onEntryKeyDown(): void;\n  onFocusProxyEnter(side: 'start' | 'end'): void;\n  onRootContentClose(): void;\n  onContentFocusOutside(): void;\n};\n\nconst [NavigationMenuItemContextProvider, useNavigationMenuItemContext] =\n  createNavigationMenuContext<NavigationMenuItemContextValue>(ITEM_NAME);\n\ntype NavigationMenuItemElement = React.ElementRef<typeof Primitive.li>;\ntype PrimitiveListItemProps = Radix.ComponentPropsWithoutRef<typeof Primitive.li>;\ninterface NavigationMenuItemProps extends PrimitiveListItemProps {\n  value?: string;\n}\n\nconst NavigationMenuItem = React.forwardRef<NavigationMenuItemElement, NavigationMenuItemProps>(\n  (props: ScopedProps<NavigationMenuItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, value: valueProp, ...itemProps } = props;\n    const autoValue = useId();\n    // We need to provide an initial deterministic value as `useId` will return\n    // empty string on the first render and we don't want to match our internal \"closed\" value.\n    const value = valueProp || autoValue || 'LEGACY_REACT_AUTO_VALUE';\n    const contentRef = React.useRef<NavigationMenuContentElement>(null);\n    const triggerRef = React.useRef<NavigationMenuTriggerElement>(null);\n    const focusProxyRef = React.useRef<FocusProxyElement>(null);\n    const restoreContentTabOrderRef = React.useRef(() => {});\n    const wasEscapeCloseRef = React.useRef(false);\n\n    const handleContentEntry = React.useCallback((side = 'start') => {\n      if (contentRef.current) {\n        restoreContentTabOrderRef.current();\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) focusFirst(side === 'start' ? candidates : candidates.reverse());\n      }\n    }, []);\n\n    const handleContentExit = React.useCallback(() => {\n      if (contentRef.current) {\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) restoreContentTabOrderRef.current = removeFromTabOrder(candidates);\n      }\n    }, []);\n\n    return (\n      <NavigationMenuItemContextProvider\n        scope={__scopeNavigationMenu}\n        value={value}\n        triggerRef={triggerRef}\n        contentRef={contentRef}\n        focusProxyRef={focusProxyRef}\n        wasEscapeCloseRef={wasEscapeCloseRef}\n        onEntryKeyDown={handleContentEntry}\n        onFocusProxyEnter={handleContentEntry}\n        onRootContentClose={handleContentExit}\n        onContentFocusOutside={handleContentExit}\n      >\n        <Primitive.li {...itemProps} ref={forwardedRef} />\n      </NavigationMenuItemContextProvider>\n    );\n  }\n);\n\nNavigationMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'NavigationMenuTrigger';\n\ntype NavigationMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface NavigationMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst NavigationMenuTrigger = React.forwardRef<\n  NavigationMenuTriggerElement,\n  NavigationMenuTriggerProps\n>((props: ScopedProps<NavigationMenuTriggerProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, disabled, ...triggerProps } = props;\n  const context = useNavigationMenuContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuTriggerElement>(null);\n  const composedRefs = useComposedRefs(ref, itemContext.triggerRef, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, itemContext.value);\n  const contentId = makeContentId(context.baseId, itemContext.value);\n  const hasPointerMoveOpenedRef = React.useRef(false);\n  const wasClickCloseRef = React.useRef(false);\n  const open = itemContext.value === context.value;\n\n  return (\n    <>\n      <Collection.ItemSlot scope={__scopeNavigationMenu} value={itemContext.value}>\n        <FocusGroupItem asChild>\n          <Primitive.button\n            id={triggerId}\n            disabled={disabled}\n            data-disabled={disabled ? '' : undefined}\n            data-state={getOpenState(open)}\n            aria-expanded={open}\n            aria-controls={contentId}\n            {...triggerProps}\n            ref={composedRefs}\n            onPointerEnter={composeEventHandlers(props.onPointerEnter, () => {\n              wasClickCloseRef.current = false;\n              itemContext.wasEscapeCloseRef.current = false;\n            })}\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse(() => {\n                if (\n                  disabled ||\n                  wasClickCloseRef.current ||\n                  itemContext.wasEscapeCloseRef.current ||\n                  hasPointerMoveOpenedRef.current\n                )\n                  return;\n                context.onTriggerEnter(itemContext.value);\n                hasPointerMoveOpenedRef.current = true;\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse(() => {\n                if (disabled) return;\n                context.onTriggerLeave();\n                hasPointerMoveOpenedRef.current = false;\n              })\n            )}\n            onClick={composeEventHandlers(props.onClick, () => {\n              context.onItemSelect(itemContext.value);\n              wasClickCloseRef.current = open;\n            })}\n            onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n              const verticalEntryKey = context.dir === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n              const entryKey = { horizontal: 'ArrowDown', vertical: verticalEntryKey }[\n                context.orientation\n              ];\n              if (open && event.key === entryKey) {\n                itemContext.onEntryKeyDown();\n                // Prevent FocusGroupItem from handling the event\n                event.preventDefault();\n              }\n            })}\n          />\n        </FocusGroupItem>\n      </Collection.ItemSlot>\n\n      {/* Proxy tab order between trigger and content */}\n      {open && (\n        <>\n          <VisuallyHiddenPrimitive.Root\n            aria-hidden\n            tabIndex={0}\n            ref={itemContext.focusProxyRef}\n            onFocus={(event) => {\n              const content = itemContext.contentRef.current;\n              const prevFocusedElement = event.relatedTarget as HTMLElement | null;\n              const wasTriggerFocused = prevFocusedElement === ref.current;\n              const wasFocusFromContent = content?.contains(prevFocusedElement);\n\n              if (wasTriggerFocused || !wasFocusFromContent) {\n                itemContext.onFocusProxyEnter(wasTriggerFocused ? 'start' : 'end');\n              }\n            }}\n          />\n\n          {/* Restructure a11y tree to make content accessible to screen reader when using the viewport */}\n          {context.viewport && <span aria-owns={contentId} />}\n        </>\n      )}\n    </>\n  );\n});\n\nNavigationMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuLink\n * -----------------------------------------------------------------------------------------------*/\n\nconst LINK_NAME = 'NavigationMenuLink';\nconst LINK_SELECT = 'navigationMenu.linkSelect';\n\ntype NavigationMenuLinkElement = React.ElementRef<typeof Primitive.a>;\ntype PrimitiveLinkProps = Radix.ComponentPropsWithoutRef<typeof Primitive.a>;\ninterface NavigationMenuLinkProps extends Omit<PrimitiveLinkProps, 'onSelect'> {\n  active?: boolean;\n  onSelect?: (event: Event) => void;\n}\n\nconst NavigationMenuLink = React.forwardRef<NavigationMenuLinkElement, NavigationMenuLinkProps>(\n  (props: ScopedProps<NavigationMenuLinkProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, active, onSelect, ...linkProps } = props;\n\n    return (\n      <FocusGroupItem asChild>\n        <Primitive.a\n          data-active={active ? '' : undefined}\n          aria-current={active ? 'page' : undefined}\n          {...linkProps}\n          ref={forwardedRef}\n          onClick={composeEventHandlers(\n            props.onClick,\n            (event) => {\n              const target = event.target as HTMLElement;\n              const linkSelectEvent = new CustomEvent(LINK_SELECT, {\n                bubbles: true,\n                cancelable: true,\n              });\n              target.addEventListener(LINK_SELECT, (event) => onSelect?.(event), { once: true });\n              dispatchDiscreteCustomEvent(target, linkSelectEvent);\n\n              if (!linkSelectEvent.defaultPrevented && !event.metaKey) {\n                const rootContentDismissEvent = new CustomEvent(ROOT_CONTENT_DISMISS, {\n                  bubbles: true,\n                  cancelable: true,\n                });\n                dispatchDiscreteCustomEvent(target, rootContentDismissEvent);\n              }\n            },\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </FocusGroupItem>\n    );\n  }\n);\n\nNavigationMenuLink.displayName = LINK_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'NavigationMenuIndicator';\n\ntype NavigationMenuIndicatorElement = NavigationMenuIndicatorImplElement;\ninterface NavigationMenuIndicatorProps extends NavigationMenuIndicatorImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuIndicator = React.forwardRef<\n  NavigationMenuIndicatorElement,\n  NavigationMenuIndicatorProps\n>((props: ScopedProps<NavigationMenuIndicatorProps>, forwardedRef) => {\n  const { forceMount, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, props.__scopeNavigationMenu);\n  const isVisible = Boolean(context.value);\n\n  return context.indicatorTrack\n    ? ReactDOM.createPortal(\n        <Presence present={forceMount || isVisible}>\n          <NavigationMenuIndicatorImpl {...indicatorProps} ref={forwardedRef} />\n        </Presence>,\n        context.indicatorTrack\n      )\n    : null;\n});\n\nNavigationMenuIndicator.displayName = INDICATOR_NAME;\n\ntype NavigationMenuIndicatorImplElement = React.ElementRef<typeof Primitive.div>;\ninterface NavigationMenuIndicatorImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuIndicatorImpl = React.forwardRef<\n  NavigationMenuIndicatorImplElement,\n  NavigationMenuIndicatorImplProps\n>((props: ScopedProps<NavigationMenuIndicatorImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, __scopeNavigationMenu);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const [activeTrigger, setActiveTrigger] = React.useState<NavigationMenuTriggerElement | null>(\n    null\n  );\n  const [position, setPosition] = React.useState<{ size: number; offset: number } | null>(null);\n  const isHorizontal = context.orientation === 'horizontal';\n  const isVisible = Boolean(context.value);\n\n  React.useEffect(() => {\n    const items = getItems();\n    const triggerNode = items.find((item) => item.value === context.value)?.ref.current;\n    if (triggerNode) setActiveTrigger(triggerNode);\n  }, [getItems, context.value]);\n\n  /**\n   * Update position when the indicator or parent track size changes\n   */\n  const handlePositionChange = () => {\n    if (activeTrigger) {\n      setPosition({\n        size: isHorizontal ? activeTrigger.offsetWidth : activeTrigger.offsetHeight,\n        offset: isHorizontal ? activeTrigger.offsetLeft : activeTrigger.offsetTop,\n      });\n    }\n  };\n  useResizeObserver(activeTrigger, handlePositionChange);\n  useResizeObserver(context.indicatorTrack, handlePositionChange);\n\n  // We need to wait for the indicator position to be available before rendering to\n  // snap immediately into position rather than transitioning from initial\n  return position ? (\n    <Primitive.div\n      aria-hidden\n      data-state={isVisible ? 'visible' : 'hidden'}\n      data-orientation={context.orientation}\n      {...indicatorProps}\n      ref={forwardedRef}\n      style={{\n        position: 'absolute',\n        ...(isHorizontal\n          ? {\n              left: 0,\n              width: position.size + 'px',\n              transform: `translateX(${position.offset}px)`,\n            }\n          : {\n              top: 0,\n              height: position.size + 'px',\n              transform: `translateY(${position.offset}px)`,\n            }),\n        ...indicatorProps.style,\n      }}\n    />\n  ) : null;\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'NavigationMenuContent';\n\ntype NavigationMenuContentElement = NavigationMenuContentImplElement;\ninterface NavigationMenuContentProps\n  extends Omit<NavigationMenuContentImplProps, keyof NavigationMenuContentImplPrivateProps> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuContent = React.forwardRef<\n  NavigationMenuContentElement,\n  NavigationMenuContentProps\n>((props: ScopedProps<NavigationMenuContentProps>, forwardedRef) => {\n  const { forceMount, ...contentProps } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const composedRefs = useComposedRefs(itemContext.contentRef, forwardedRef);\n  const open = itemContext.value === context.value;\n\n  const commonProps = {\n    value: itemContext.value,\n    triggerRef: itemContext.triggerRef,\n    focusProxyRef: itemContext.focusProxyRef,\n    wasEscapeCloseRef: itemContext.wasEscapeCloseRef,\n    onContentFocusOutside: itemContext.onContentFocusOutside,\n    onRootContentClose: itemContext.onRootContentClose,\n    ...contentProps,\n  };\n\n  return !context.viewport ? (\n    <Presence present={forceMount || open}>\n      <NavigationMenuContentImpl\n        data-state={getOpenState(open)}\n        {...commonProps}\n        ref={composedRefs}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, context.onContentEnter)}\n        onPointerLeave={composeEventHandlers(\n          props.onPointerLeave,\n          whenMouse(context.onContentLeave)\n        )}\n        style={{\n          // Prevent interaction when animating out\n          pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n          ...commonProps.style,\n        }}\n      />\n    </Presence>\n  ) : (\n    <ViewportContentMounter forceMount={forceMount} {...commonProps} ref={composedRefs} />\n  );\n});\n\nNavigationMenuContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ViewportContentMounterElement = NavigationMenuContentImplElement;\ninterface ViewportContentMounterProps extends NavigationMenuContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst ViewportContentMounter = React.forwardRef<\n  ViewportContentMounterElement,\n  ViewportContentMounterProps\n>((props: ScopedProps<ViewportContentMounterProps>, forwardedRef) => {\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const { onViewportContentChange, onViewportContentRemove } = context;\n\n  useLayoutEffect(() => {\n    onViewportContentChange(props.value, {\n      ref: forwardedRef,\n      ...props,\n    });\n  }, [props, forwardedRef, onViewportContentChange]);\n\n  useLayoutEffect(() => {\n    return () => onViewportContentRemove(props.value);\n  }, [props.value, onViewportContentRemove]);\n\n  // Content is proxied into the viewport\n  return null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst ROOT_CONTENT_DISMISS = 'navigationMenu.rootContentDismiss';\n\ntype MotionAttribute = 'to-start' | 'to-end' | 'from-start' | 'from-end';\ntype NavigationMenuContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\n\ninterface NavigationMenuContentImplPrivateProps {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement>;\n  focusProxyRef: React.RefObject<FocusProxyElement>;\n  wasEscapeCloseRef: React.MutableRefObject<boolean>;\n  onContentFocusOutside(): void;\n  onRootContentClose(): void;\n}\ninterface NavigationMenuContentImplProps\n  extends Omit<DismissableLayerProps, 'onDismiss'>,\n    NavigationMenuContentImplPrivateProps {}\n\nconst NavigationMenuContentImpl = React.forwardRef<\n  NavigationMenuContentImplElement,\n  NavigationMenuContentImplProps\n>((props: ScopedProps<NavigationMenuContentImplProps>, forwardedRef) => {\n  const {\n    __scopeNavigationMenu,\n    value,\n    triggerRef,\n    focusProxyRef,\n    wasEscapeCloseRef,\n    onRootContentClose,\n    onContentFocusOutside,\n    ...contentProps\n  } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, __scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuContentImplElement>(null);\n  const composedRefs = useComposedRefs(ref, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, value);\n  const contentId = makeContentId(context.baseId, value);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const prevMotionAttributeRef = React.useRef<MotionAttribute | null>(null);\n\n  const { onItemDismiss } = context;\n\n  React.useEffect(() => {\n    const content = ref.current;\n\n    // Bubble dismiss to the root content node and focus its trigger\n    if (context.isRootMenu && content) {\n      const handleClose = () => {\n        onItemDismiss();\n        onRootContentClose();\n        if (content.contains(document.activeElement)) triggerRef.current?.focus();\n      };\n      content.addEventListener(ROOT_CONTENT_DISMISS, handleClose);\n      return () => content.removeEventListener(ROOT_CONTENT_DISMISS, handleClose);\n    }\n  }, [context.isRootMenu, props.value, triggerRef, onItemDismiss, onRootContentClose]);\n\n  const motionAttribute = React.useMemo(() => {\n    const items = getItems();\n    const values = items.map((item) => item.value);\n    if (context.dir === 'rtl') values.reverse();\n    const index = values.indexOf(context.value);\n    const prevIndex = values.indexOf(context.previousValue);\n    const isSelected = value === context.value;\n    const wasSelected = prevIndex === values.indexOf(value);\n\n    // We only want to update selected and the last selected content\n    // this avoids animations being interrupted outside of that range\n    if (!isSelected && !wasSelected) return prevMotionAttributeRef.current;\n\n    const attribute = (() => {\n      // Don't provide a direction on the initial open\n      if (index !== prevIndex) {\n        // If we're moving to this item from another\n        if (isSelected && prevIndex !== -1) return index > prevIndex ? 'from-end' : 'from-start';\n        // If we're leaving this item for another\n        if (wasSelected && index !== -1) return index > prevIndex ? 'to-start' : 'to-end';\n      }\n      // Otherwise we're entering from closed or leaving the list\n      // entirely and should not animate in any direction\n      return null;\n    })();\n\n    prevMotionAttributeRef.current = attribute;\n    return attribute;\n  }, [context.previousValue, context.value, context.dir, getItems, value]);\n\n  return (\n    <FocusGroup asChild>\n      <DismissableLayer\n        id={contentId}\n        aria-labelledby={triggerId}\n        data-motion={motionAttribute}\n        data-orientation={context.orientation}\n        {...contentProps}\n        ref={composedRefs}\n        onDismiss={() => {\n          const rootContentDismissEvent = new Event(ROOT_CONTENT_DISMISS, {\n            bubbles: true,\n            cancelable: true,\n          });\n          ref.current?.dispatchEvent(rootContentDismissEvent);\n        }}\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n          onContentFocusOutside();\n          const target = event.target as HTMLElement;\n          // Only dismiss content when focus moves outside of the menu\n          if (context.rootNavigationMenu?.contains(target)) event.preventDefault();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const target = event.target as HTMLElement;\n          const isTrigger = getItems().some((item) => item.ref.current?.contains(target));\n          const isRootViewport = context.isRootMenu && context.viewport?.contains(target);\n          if (isTrigger || isRootViewport || !context.isRootMenu) event.preventDefault();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n          const isTabKey = event.key === 'Tab' && !isMetaKey;\n          if (isTabKey) {\n            const candidates = getTabbableCandidates(event.currentTarget);\n            const focusedElement = document.activeElement;\n            const index = candidates.findIndex((candidate) => candidate === focusedElement);\n            const isMovingBackwards = event.shiftKey;\n            const nextCandidates = isMovingBackwards\n              ? candidates.slice(0, index).reverse()\n              : candidates.slice(index + 1, candidates.length);\n\n            if (focusFirst(nextCandidates)) {\n              // prevent browser tab keydown because we've handled focus\n              event.preventDefault();\n            } else {\n              // If we can't focus that means we're at the edges\n              // so focus the proxy and let browser handle\n              // tab/shift+tab keypress on the proxy instead\n              focusProxyRef.current?.focus();\n            }\n          }\n        })}\n        onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, (event) => {\n          // prevent the dropdown from reopening\n          // after the escape key has been pressed\n          wasEscapeCloseRef.current = true;\n        })}\n      />\n    </FocusGroup>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'NavigationMenuViewport';\n\ntype NavigationMenuViewportElement = NavigationMenuViewportImplElement;\ninterface NavigationMenuViewportProps\n  extends Omit<NavigationMenuViewportImplProps, 'children' | 'activeContentValue'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuViewport = React.forwardRef<\n  NavigationMenuViewportElement,\n  NavigationMenuViewportProps\n>((props: ScopedProps<NavigationMenuViewportProps>, forwardedRef) => {\n  const { forceMount, ...viewportProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, props.__scopeNavigationMenu);\n  const open = Boolean(context.value);\n\n  return (\n    <Presence present={forceMount || open}>\n      <NavigationMenuViewportImpl {...viewportProps} ref={forwardedRef} />\n    </Presence>\n  );\n});\n\nNavigationMenuViewport.displayName = VIEWPORT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype NavigationMenuViewportImplElement = React.ElementRef<typeof Primitive.div>;\ninterface NavigationMenuViewportImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuViewportImpl = React.forwardRef<\n  NavigationMenuViewportImplElement,\n  NavigationMenuViewportImplProps\n>((props: ScopedProps<NavigationMenuViewportImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, children, ...viewportImplProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, __scopeNavigationMenu);\n  const composedRefs = useComposedRefs(forwardedRef, context.onViewportChange);\n  const viewportContentContext = useViewportContentContext(\n    CONTENT_NAME,\n    props.__scopeNavigationMenu\n  );\n  const [size, setSize] = React.useState<{ width: number; height: number } | null>(null);\n  const [content, setContent] = React.useState<NavigationMenuContentElement | null>(null);\n  const viewportWidth = size ? size?.width + 'px' : undefined;\n  const viewportHeight = size ? size?.height + 'px' : undefined;\n  const open = Boolean(context.value);\n  // We persist the last active content value as the viewport may be animating out\n  // and we want the content to remain mounted for the lifecycle of the viewport.\n  const activeContentValue = open ? context.value : context.previousValue;\n\n  /**\n   * Update viewport size to match the active content node.\n   * We prefer offset dimensions over `getBoundingClientRect` as the latter respects CSS transform.\n   * For example, if content animates in from `scale(0.5)` the dimensions would be anything\n   * from `0.5` to `1` of the intended size.\n   */\n  const handleSizeChange = () => {\n    if (content) setSize({ width: content.offsetWidth, height: content.offsetHeight });\n  };\n  useResizeObserver(content, handleSizeChange);\n\n  return (\n    <Primitive.div\n      data-state={getOpenState(open)}\n      data-orientation={context.orientation}\n      {...viewportImplProps}\n      ref={composedRefs}\n      style={{\n        // Prevent interaction when animating out\n        pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n        ['--radix-navigation-menu-viewport-width' as any]: viewportWidth,\n        ['--radix-navigation-menu-viewport-height' as any]: viewportHeight,\n        ...viewportImplProps.style,\n      }}\n      onPointerEnter={composeEventHandlers(props.onPointerEnter, context.onContentEnter)}\n      onPointerLeave={composeEventHandlers(props.onPointerLeave, whenMouse(context.onContentLeave))}\n    >\n      {Array.from(viewportContentContext.items).map(([value, { ref, forceMount, ...props }]) => {\n        const isActive = activeContentValue === value;\n        return (\n          <Presence key={value} present={forceMount || isActive}>\n            <NavigationMenuContentImpl\n              {...props}\n              ref={composeRefs(ref, (node) => {\n                // We only want to update the stored node when another is available\n                // as we need to smoothly transition between them.\n                if (isActive && node) setContent(node);\n              })}\n            />\n          </Presence>\n        );\n      })}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_GROUP_NAME = 'FocusGroup';\n\ntype FocusGroupElement = React.ElementRef<typeof Primitive.div>;\ninterface FocusGroupProps extends PrimitiveDivProps {}\n\nconst FocusGroup = React.forwardRef<FocusGroupElement, FocusGroupProps>(\n  (props: ScopedProps<FocusGroupProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const context = useNavigationMenuContext(FOCUS_GROUP_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.Provider scope={__scopeNavigationMenu}>\n        <FocusGroupCollection.Slot scope={__scopeNavigationMenu}>\n          <Primitive.div dir={context.dir} {...groupProps} ref={forwardedRef} />\n        </FocusGroupCollection.Slot>\n      </FocusGroupCollection.Provider>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_KEYS = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown'];\nconst FOCUS_GROUP_ITEM_NAME = 'FocusGroupItem';\n\ntype FocusGroupItemElement = React.ElementRef<typeof Primitive.button>;\ninterface FocusGroupItemProps extends PrimitiveButtonProps {}\n\nconst FocusGroupItem = React.forwardRef<FocusGroupItemElement, FocusGroupItemProps>(\n  (props: ScopedProps<FocusGroupItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const getItems = useFocusGroupCollection(__scopeNavigationMenu);\n    const context = useNavigationMenuContext(FOCUS_GROUP_ITEM_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.ItemSlot scope={__scopeNavigationMenu}>\n        <Primitive.button\n          {...groupProps}\n          ref={forwardedRef}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isFocusNavigationKey = ['Home', 'End', ...ARROW_KEYS].includes(event.key);\n            if (isFocusNavigationKey) {\n              let candidateNodes = getItems().map((item) => item.ref.current!);\n              const prevItemKey = context.dir === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n              const prevKeys = [prevItemKey, 'ArrowUp', 'End'];\n              if (prevKeys.includes(event.key)) candidateNodes.reverse();\n              if (ARROW_KEYS.includes(event.key)) {\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = candidateNodes.slice(currentIndex + 1);\n              }\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n\n              // Prevent page scroll while navigating\n              event.preventDefault();\n            }\n          })}\n        />\n      </FocusGroupCollection.ItemSlot>\n    );\n  }\n);\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const previouslyFocusedElement = document.activeElement;\n  return candidates.some((candidate) => {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === previouslyFocusedElement) return true;\n    candidate.focus();\n    return document.activeElement !== previouslyFocusedElement;\n  });\n}\n\nfunction removeFromTabOrder(candidates: HTMLElement[]) {\n  candidates.forEach((candidate) => {\n    candidate.dataset.tabindex = candidate.getAttribute('tabindex') || '';\n    candidate.setAttribute('tabindex', '-1');\n  });\n  return () => {\n    candidates.forEach((candidate) => {\n      const prevTabIndex = candidate.dataset.tabindex as string;\n      candidate.setAttribute('tabindex', prevTabIndex);\n    });\n  };\n}\n\nfunction useResizeObserver(element: HTMLElement | null, onResize: () => void) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = NavigationMenu;\nconst Sub = NavigationMenuSub;\nconst List = NavigationMenuList;\nconst Item = NavigationMenuItem;\nconst Trigger = NavigationMenuTrigger;\nconst Link = NavigationMenuLink;\nconst Indicator = NavigationMenuIndicator;\nconst Content = NavigationMenuContent;\nconst Viewport = NavigationMenuViewport;\n\nexport {\n  createNavigationMenuScope,\n  //\n  NavigationMenu,\n  NavigationMenuSub,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuContent,\n  NavigationMenuViewport,\n  //\n  Root,\n  Sub,\n  List,\n  Item,\n  Trigger,\n  Link,\n  Indicator,\n  Content,\n  Viewport,\n};\nexport type {\n  NavigationMenuProps,\n  NavigationMenuSubProps,\n  NavigationMenuListProps,\n  NavigationMenuItemProps,\n  NavigationMenuTriggerProps,\n  NavigationMenuLinkProps,\n  NavigationMenuIndicatorProps,\n  NavigationMenuContentProps,\n  NavigationMenuViewportProps,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}