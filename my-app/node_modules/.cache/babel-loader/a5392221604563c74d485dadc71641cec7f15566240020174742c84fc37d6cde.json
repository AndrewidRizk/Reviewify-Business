{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Searchbar.css\";\nimport { IoSearchOutline } from \"react-icons/io5\";\nimport axios from \"axios\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch\n}) => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n  const sendDataToFlask = async () => {\n    const apiUrl = 'http://localhost';\n    const requestData = {\n      type: 'custom_type',\n      // You can set a fixed type or make it dynamic as well\n      message: userInput\n    };\n    try {\n      const response = await axios.post(apiUrl, requestData);\n      setResponseMessage(response.data.message);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(SearchBar, \"gZCbpcSwVcp2VkMaBK+kY14cIpo=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useEffect","useState","IoSearchOutline","axios","Fragment","_Fragment","jsxDEV","_jsxDEV","SearchBar","onSearch","_s","userInput","setUserInput","responseMessage","setResponseMessage","sendDataToFlask","apiUrl","requestData","type","message","response","post","data","error","console","_c","$RefreshReg$"],"sources":["/Users/kaan/dh10/my-app/src/components/Searchbar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Searchbar.css\";\nimport { IoSearchOutline } from \"react-icons/io5\";\nimport axios from \"axios\";\n\nconst SearchBar = ({ onSearch }) => {\n  const [userInput, setUserInput] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n\n  const sendDataToFlask = async () => {\n    const apiUrl = 'http://localhost';\n\n    const requestData = {\n      type: 'custom_type', // You can set a fixed type or make it dynamic as well\n      message: userInput,\n    };\n\n    try {\n      const response = await axios.post(apiUrl, requestData);\n      setResponseMessage(response.data.message);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  \n\n  return (\n    <>\n    {/* <div className=\"search-containers\">\n    <div className=\"search-container\">\n      <IoSearchOutline style={{position: 'flex', color: \"#424242\"}} size= \"25px\"/>\n      <input className=\"search-input\" type=\"text\" placeholder=\"Search...\"/> \n    </div>\n    <div className=\"search-container\">\n    <IoSearchOutline style={{position: 'flex', color: \"#424242\"}} size= \"25px\"/>\n    <input className=\"search-input\" type=\"text\" placeholder=\"Search...\"/> \n    </div>\n    </div> */}\n    \n    </>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,SAASC,eAAe,QAAQ,iBAAiB;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,MAAM,GAAG,kBAAkB;IAEjC,MAAMC,WAAW,GAAG;MAClBC,IAAI,EAAE,aAAa;MAAE;MACrBC,OAAO,EAAER;IACX,CAAC;IAED,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAACL,MAAM,EAAEC,WAAW,CAAC;MACtDH,kBAAkB,CAACM,QAAQ,CAACE,IAAI,CAACH,OAAO,CAAC;IAC3C,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAGD,oBACEhB,OAAA,CAAAF,SAAA,mBAYE,CAAC;AAEP,CAAC;AAACK,EAAA,CApCIF,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}